namespace = starborn_init

#1. starting - spawn planets and habitats
country_event = {
	id = starborn_init.1
	hide_window = yes
	is_triggered_only = yes

	trigger = {
			is_ai = no
			has_starborn = yes
	}

	immediate = {
		save_event_target_as = starborn_country
		set_country_flag = starborn_origin
		set_country_flag = starborn_hab_size_4

		# we live in a space station, we understand how hydroponics work
		give_technology = { 
				message = no 
				tech = tech_hydroponics 
		}

		# Say hello to voidborn AP.
		give_technology = { 
			message = no 
			tech = tech_habitat_1 
		}
	
		# tweak the starting system
		random_system_within_border = {
			limit = {
					any_system_planet = {
							is_capital = yes
					}
			}
			
			# Capital
			random_system_planet = { 
				limit = {
					has_planet_flag = starborn_origin
				}
				
				save_event_target_as = origin
				random_mining_station = {
					dismantle = yes
				}
			}

			#solar habitat
			random_system_planet = { 
				limit = {
					has_planet_flag = starborn_orbital_city
				}
				
				save_event_target_as = orbital_city
			}

			event_target:origin = {
				event_target:orbital_city = {
					set_planet_flag = habitat_of@prev
				}
			}

			event_target:orbital_city = {
				event_target:origin = {
					set_planet_flag = planet_of@prev
				}
			}

			# Star
			random_system_planet = { 
				limit = {
					is_star = yes
					has_planet_flag = starborn_start_solar
				}
				
				save_event_target_as = star_spawn
				random_mining_station = {
					dismantle = yes
				}
			}

			#solar habitat
			random_system_planet = { 
				limit = {
					has_planet_flag = starborn_start_solar_hab
				}
				
				save_event_target_as = star_hab
			}
		
			event_target:star_spawn = {
				event_target:star_hab = {
					set_planet_flag = habitat_of@prev
				}
				set_planet_flag = planet_of@star_hab
			}

			event_target:star_hab = {
				event_target:star_spawn = {
					set_planet_flag = planet_of@prev
				}
			}

			# Asteroid
			random_system_planet = { 
				limit = {
					has_planet_flag = starborn_start_mining
				}
				
				save_event_target_as = asteroid_spawn
				random_mining_station = {
					dismantle = yes
				}
			}

			#mining habitat
			random_system_planet = {
				limit = {
					has_planet_flag = starborn_start_mining_hab
				}
				
				save_event_target_as = asteroid_hab
			}

			event_target:asteroid_spawn = {
				event_target:asteroid_hab = {
					set_planet_flag = habitat_of@prev
				}
			}

			event_target:asteroid_hab = {
				event_target:asteroid_spawn = {
					set_planet_flag = planet_of@prev
				}
			}

			every_system_planet = {
				limit = {
					is_planet_class = pc_habitat
				}
				set_planet_entity = {
					entity = "habitat_phase_01_entity"
					graphical_culture = event_target:starborn_country
				}
			}
		}
		country_event = {
			id = starborn_init.10
			days = 1
		}
	}
}



#3. Starting mechanics display
country_event = {
	id = starborn_init.3    
	title = "starborn_init.3.name"
	desc = "starborn_init.3.desc"
	picture = GFX_evt_colony_settlement
	is_triggered_only = yes

		trigger = {
				is_ai = no
				has_starborn = yes
		}

	option = {
		name = "starborn_init.3.option.a"
		hidden_effect = {
			if = {
				limit = {
					has_retile = yes
					has_country_flag = startborn_no_retile
				}
				capital_scope = {
					planet_event = {
						id = starborn_init.9
					}
				}
			}			
		}
	}
}


#7. enact living metal event if playing in the OP system.  
country_event = {
	id = starborn_init.7
	hide_window = yes
	is_triggered_only = yes

	trigger = {
			is_ai = no
			has_starborn = yes
	}

	immediate = {
			if = {
					limit = {
							has_tech_option = tech_mine_living_metal
					}
					add_tech_progress = {
							tech = tech_mine_living_metal
							progress = 0.25
					}
			}
			else = {
					add_research_option = tech_mine_living_metal
			}
	}
}

#8. Deal with Starting world - the orbital city
planet_event = {
	id = starborn_init.8
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = {
			has_starborn = yes
		}
	}

	immediate = {
		set_name = "Arc of Civilisation"
		solar_system = {
			if = {
				limit = {
					has_star_flag = sol_system
				}
				set_name = NAME_Sol
				random_system_planet = {
					limit = {
						is_star = yes
					}
					set_name = NAME_Sol
				}
			}
		}
		clear_blockers = yes
		if = {
			limit = {
				has_retile = no
			}
			owner = { 
				set_country_flag = startborn_no_retile
			}
			remove_all_districts = yes			
			add_district = district_starborn_starting_hab_housing
			add_district = district_starborn_starting_hab_housing
			add_district = district_starborn_starting_hab_housing
			add_district = district_starborn_starting_scavenger
			add_district = district_starborn_starting_scavenger
			add_district = district_starborn_starting_scavenger
			add_district = district_starborn_starting_solar
			add_district = district_starborn_starting_solar
			add_district = district_starborn_starting_solar

			if = {
				limit = {
					owner = {
						is_lithoid_empire = yes
					}
				}
				add_district = district_starborn_starting_scavenger
				add_district = district_starborn_starting_scavenger
				add_district = district_starborn_starting_scavenger
				add_district = district_starborn_starting_solar
				add_district = district_starborn_starting_solar
			}
			else = {
				add_district = district_starborn_starting_preserve
				add_district = district_starborn_starting_preserve
				add_district = district_starborn_starting_preserve
			}
		}		
	}
}

#9. Deal with Starting world - the orbital city - Stellaris imortal
#Remedial event as there are reliability problems with the global flag being set.
planet_event = {
	id = starborn_init.9
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = {
			has_starborn_retile = yes
		}
	}

	immediate = {
		set_name = "Arc of Civilisation"
		clear_blockers = yes
		remove_all_districts = yes
		generate_start_buildings_and_districts = yes
		add_deposit = d_starborn_retile_scavenger
		add_deposit = d_starborn_retile_starting_energy		

		add_deposit = d_starborn_retile_scavenger
		add_deposit = d_starborn_retile_starting_energy
		
		if = {
			limit = {
				owner = {
					is_lithoid_empire = no
				}
			}
			add_deposit = d_starborn_retile_starting_park
		}
		else = {
			add_deposit = d_starborn_retile_scavenger
		}
	}
}


#10 retile deposits
country_event = {
	id = starborn_init.10
	hide_window = yes
	is_triggered_only = yes

	trigger = {
			is_ai = no
			has_starborn_retile = yes
	}

	immediate = {
		event_target:asteroid_hab = {
			add_deposit = retile_module_mine
			change_variable = { which = module_count value = 1 }
			set_planet_size = 6
		}
		event_target:star_hab = {
			add_deposit = retile_module_generator
			change_variable = { which = module_count value = 1 }
			set_planet_size = 6
		}
	}
}

# Terminus Systems Species Variety

country_event = {
	id = starborn_init.4
	hide_window = yes
	
	trigger = {
		has_origin = origin_terminus_omega
	}

	is_triggered_only = yes
	
	immediate = {
		capital_scope = {
			create_species = {
				class="MassEffectBIO"
				portrait="vorcha"
				name="Vorcha"
				plural="Vorcha"
				adjective="Vorcha"
				name_list="vorcha"
				homeworld = this
				traits = { 
					trait="me_trait_vorcha_primitive"
					trait="me_trait_vorcha_adaptation"
				}
				sapient = yes
				is_mod = no
				immortal = no
			}
			create_species = {
				class="MassEffectBIO"
				portrait="batarian"
				name="Batarian"
				plural="Batarians"
				adjective="Batarians"
				name_list="batarian"
				homeworld = this
				traits = { 
					trait="trait_decadent"
					trait="trait_quarrelsome"
					trait="me_trait_four_eyes"
					trait="trait_conformists"
				}
				sapient = yes
				is_mod = no
				immortal = no
			}
			create_species = {
				class="MassEffectBIO"
				portrait="krogan"
				name="Krogan"
				plural="Krogan"
				adjective="Krogan"
				name_list="krogan"
				homeworld = this
				traits = { 
					trait="trait_survivor"
					trait="me_trait_genophage"
					trait="me_trait_violent_by_nature"
					trait="me_trait_krogan_physiology"
				}
				sapient = yes
				is_mod = no
				immortal = no
			}
			create_species = {
				class="MassEffectBIO"
				portrait="quarian"
				name="Quarian"
				plural="Quarians"
				adjective="Quarian"
				homeworld = this
				name_list="quarian_names"
				traits = { 
					trait="me_trait_ship_bound"
					trait="me_trait_keelahsalai"
					trait="me_trait_dextro_immunity"
				}
				sapient = yes
				is_mod = no
				immortal = no
			}
			create_species = {
				class="MassEffectBIO"
				portrait="turian"
				name="Turian"
				plural="Turians"
				adjective="Turian"
				name_list="turian_names"
				homeworld = this
				traits = { 
					trait="me_trait_born_to_serve"
					trait="me_trait_dextro_immunity"
				}
				sapient = yes
				is_mod = no
				immortal = no
			}
			create_species = {
				class="MassEffectBIO"
				portrait="human"
				name="Human"
				plural="Humans"
				adjective="Human"
				name_list="alliance_names"
				homeworld = this
				traits = { 
					trait="trait_wasteful"
					trait="me_trait_humans_ambitious"
				}
				sapient = yes
				is_mod = no
				immortal = no
			}
		}
		capital_scope = {
            while = {
                random_pop = {
                    limit = {
                        has_trait = me_trait_asari_life
                    }
                    kill_pop = yes
                }
                count = 25
            }
        }
		capital_scope = {
			while = {
				count = 5
				create_pop = {
					species = "Human"
				}
			}
		}
		capital_scope = {
			while = {
				count = 7
				create_pop = {
					species = "Krogan"
				}
			}
		}
		capital_scope = {
			while = {
				count = 8
				create_pop = {
					species = "Vorcha"
				}
			}
		}
		capital_scope = {
			while = {
				count = 9
				create_pop = {
					species = "Batarian"
				}
			}
		}
		capital_scope = {
			while = {
				count = 6
				create_pop = {
					species = "Turian"
				}
			}
		}
		capital_scope = {
			while = {
				count = 3
				create_pop = {
					species = "Quarian"
				}
			}
		}
	}
}

# Terminus Systems Species Variety
country_event = {
	id = starborn_init.4
	hide_window = yes
	
	trigger = {
		has_origin = origin_starborn_omega
	}

	is_triggered_only = yes
	
	immediate = {
		capital_scope = {
			create_species = {
				class="MassEffectBIO"
				portrait="vorcha"
				name="Vorcha"
				plural="Vorcha"
				adjective="Vorcha"
				name_list="vorcha"
				homeworld = this
				traits = { 
					trait="me_trait_vorcha_primitive"
					trait="me_trait_vorcha_adaptation"
				}
				sapient = yes
				is_mod = no
				immortal = no
			}
			create_species = {
				class="MassEffectBIO"
				portrait="batarian"
				name="Batarian"
				plural="Batarians"
				adjective="Batarians"
				name_list="batarian"
				homeworld = this
				traits = { 
					trait="trait_decadent"
					trait="trait_quarrelsome"
					trait="me_trait_four_eyes"
					trait="trait_conformists"
				}
				sapient = yes
				is_mod = no
				immortal = no
			}
			create_species = {
				class="MassEffectBIO"
				portrait="krogan"
				name="Krogan"
				plural="Krogan"
				adjective="Krogan"
				name_list="krogan"
				homeworld = this
				traits = { 
					trait="trait_survivor"
					trait="me_trait_genophage"
					trait="me_trait_violent_by_nature"
					trait="me_trait_krogan_physiology"
				}
				sapient = yes
				is_mod = no
				immortal = no
			}
			create_species = {
				class="MassEffectBIO"
				portrait="quarian"
				name="Quarian"
				plural="Quarians"
				adjective="Quarian"
				homeworld = this
				name_list="quarian_names"
				traits = { 
					trait="me_trait_ship_bound"
					trait="me_trait_keelahsalai"
					trait="me_trait_dextro_immunity"
				}
				sapient = yes
				is_mod = no
				immortal = no
			}
			create_species = {
				class="MassEffectBIO"
				portrait="turian"
				name="Turian"
				plural="Turians"
				adjective="Turian"
				name_list="turian_names"
				homeworld = this
				traits = { 
					trait="me_trait_born_to_serve"
					trait="me_trait_dextro_immunity"
				}
				sapient = yes
				is_mod = no
				immortal = no
			}
			create_species = {
				class="MassEffectBIO"
				portrait="human"
				name="Human"
				plural="Humans"
				adjective="Human"
				name_list="alliance_names"
				homeworld = this
				traits = { 
					trait="trait_wasteful"
					trait="me_trait_humans_ambitious"
				}
				sapient = yes
				is_mod = no
				immortal = no
			}
		}
		capital_scope = {
            while = {
                random_pop = {
                    limit = {
                        has_trait = me_trait_asari_life
                    }
                    kill_pop = yes
                }
                count = 25
            }
        }
		capital_scope = {
			while = {
				count = 5
				create_pop = {
					species = "Human"
				}
			}
		}
		capital_scope = {
			while = {
				count = 7
				create_pop = {
					species = "Krogan"
				}
			}
		}
		capital_scope = {
			while = {
				count = 8
				create_pop = {
					species = "Vorcha"
				}
			}
		}
		capital_scope = {
			while = {
				count = 9
				create_pop = {
					species = "Batarian"
				}
			}
		}
		capital_scope = {
			while = {
				count = 6
				create_pop = {
					species = "Turian"
				}
			}
		}
		capital_scope = {
			while = {
				count = 3
				create_pop = {
					species = "Quarian"
				}
			}
		}
	}
}